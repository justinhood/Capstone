gpa=c(3.26,2.60,3.35,2.86,3.82,2.21,3.47)
salary=c(33.8,29.8,33.5,30.4,36.4,27.6,35.3)
mean(gpa)
sum(gpa*gpa)-(sum(gpa)**2)/7
1/7
1/7+((3.25-mean(gpa))**2)/(sum(gpa*gpa)-(sum(gpa)**2)/7)
2.447*.536321*sqrt(.158295)
33.362+2.447*.536321*sqrt(.158295)
33.362-2.447*.536321*sqrt(.158295)
33.362-2.571*.536321*sqrt(.158295)
33.362+2.571*.536321*sqrt(.158295)
33.362-2.571*.536321*sqrt(1+.158295)
33.362+2.571*.536321*sqrt(1+.158295)
11.46409+24.60221*4
11.46409+24.60221*5
138.1968-24.60221
time=c(8.0,4.7,3.7,2.8,8.9)
experience=c(1,8,4,16,1)
time=c(8.0,4.7,3.7,2.8,8.9,5.8,2.0,1.9,3.3)
experience=c(1,8,4,16,1,2,12,5,3)
plot(experience,time)
plot(experience,1/time)
invtime=time^(-1)
invexp=experience^(-1)
plot(invexp, time)
delete invtime
delete(invtime)
rm(invtime)
clear
rm(plot)
plot(invexp,time)
rm(all)
clc
experience=(1 8 4 16 1 2 12 5 3)
experience=(1,8,4,16,1,2,12,5,3)
experience=c(1 8 4 16 1 2 12 5 3)
experience=c(1,8,4,16,1,2,12,5,3)
experience=c(1,8,4,16,1,2,12,5,3)
time=c(8,4.7,3.7,2.8,8.9,5.8,2.0,1.9,3.3)
invexp=experience^(-1)
plot(invexp,time)
mod=lm(time ~ invexp)
summary(mod_)
summary(mod)
model.response(5)
2.0575+6.3537*5
2.0575+6.3537/5
SSE=sum(time**2)-(2.0575*sum(time)+6.3537*sum(time*invexp))
s2=SSE/7
s=sqrt(s2)
SSxx=sum(invexp**2)-((sum(invexp)))
SSxx=sum(invexp**2)-((sum(invexp))**2/9)
mean(invexp)
dist=1/9+((.2-mean(invexp))**2)/SSxx
v=s*2.365*sqrt(1+dist)
3.32824+v
3.32824-v
invexp
x=c(1,2,3)
y=c(4,5,6)
mod<- lm(y~x)
summary mod
summary(mod)
sum(x^2)
sum(y)
sum(x)
sum(xy)
sum(x*y)
x=c(1,2,3)
y=c(4,5,6)
mod <- lm(y~x)
summary(mod)
3*mean(y)*sum(x**2)-3*mean(x)*sum(x*y)
sum(x**2)-9*mean(x)**2
3*sum(x**2)-98mean(x)**2
3*sum(x**2)-9*mean(x)**2
3*sum(x*y)-9*mean(x)*mean(y)
clear()
comb=function(a,b){}
choose(9850,99)
x0=choose(150,0)*choose(9850,100)/choose(10000,100)
x0=choose(150,1)*choose(9850,99)/choose(10000,100)
x0=choose(150,0)*choose(9850,100)/choose(10000,100)
x1=choose(150,1)*choose(9850,99)/choose(10000,100)
p=x0+x1
p
x=choose(150,5)*choose(9850,95)/choose(10000,100)
for(i in 1:100){}
for(i in 1:100){
i+=1
}
s=0
i=1
for(i in 0:100){
s=s+choose(150,i)*choose(9850,100-i)/choose(10000,100)
}
s
2x0=choose(25,0)*choose(4975,100)/choose(5000,100)
r0=choose(25,0)*choose(4975,100)/choose(5000,100)
r1=choose(25,1)*choose(4975,99)/choose(5000,100)
1-r0-r1
s=0
for(i in 0:100){
s=s+choose(25,i)*choose(4975,100-i)/choose(5000,100)
}
t=pnorm(10.45,10.48,0.0142)
t
t2=pnorm(10.55,10.48,.0142)
t2=1-t2
t+t2
t
t2=pnorm(10.55,10.48,.0142)
t2
t2=1-t2
t2
exp(-97/1000)
exp(-97/1000)*(97/1000)/1
s=0
for(i in 0:97){
s=s+exp(-97/1000)*[(97/1000)**i]/(i!)
}
for(i in 0:97){
s=s+exp(-97/1000)*((97/1000)**i)/(i!)
}
for(i in 0:97){
s=s+exp(-97/1000)*((97/1000)**i)/(factorial(i))
}
exp(-97/1000)+exp(-97/1000)*(97/1000)/1
500*(exp(-97/1000)+exp(-97/1000)*(97/1000)/1)
## 3.14 ##
rm(list = ls())
X <- matrix(c(9,1,
5,3,
1,2), byrow=TRUE,ncol = 2)
b1=2*X[1,1]+3*X[1,2]
b2=2*X[2,1]+3*X[2,2]
b3=2*X[3,1]+3*X[3,2]
B=c(b1,b2,b3)
bmean=mean(B)
bvar=var(B)
c1=-1*X[1,1]+2*X[1,2]
c2=-1*X[2,1]+2*X[2,2]
c3=-1*X[3,1]+2*X[3,2]
C=c(c1,c2,c3)
cmean=mean(C)
cvar=var(C)
oldcov=cov(B,C)
##################
xbar=matrix(c(mean(X[,1]),mean(X[,2])),byrow = TRUE,ncol = 2)
Xadj=X
for (i in 1:3) {
for (j in 1:2) {
Xadj[i,j]=X[i,j]-xbar[,j]
}
}
Xadj
S=(t(Xadj)%*%Xadj)/2
S
A=matrix(c(3,0,))
A=matrix(c(3,0,
0,-2), byrow\)
A=matrix(c(3,0,
0,-2), byrow=TRUE, ncol=2)
t(A)%*%A
eigen(t(A)%*%A)
A=matrix(c(2,0,
0,3), byrow=TRUE, ncol=2)
t(A)%*%A
eigen(t(A)%*%A)
A=matrix(c(0,2,
0,0,
0,0), byrow = TRUE, ncol = 2)
t(A)%*%A
eigen(t(A)%*%A)
A=matrix(c(1,1,
0,0), byrow = TRUE, ncol = 2)
t(A)%*%A
eigen(t(A)%*%A)
A
t(A)%*%A
A=matrix(c(1,1,
1,1), byrow = TRUE, ncol = 2)
t(A)%*%A
eigen(t(A)%*%A)
A=matrix(c(1,2,
0,2), byrow = TRUE, ncol = 2)
t(A)%*%A
eigen(t(A)%*%A)
sigma1=eigen(t(A)%*%A)$values[1]
sigma2=eigen(t(A)%*%A)$values[2]
sqrt(sigma1)
A=matrix(c(-2,11,
10,5), byrow = TRUE, ncol = 2)
t(A)%*%A
eigen(t(A)%*%A)
sqrt(160)
sqrt(90)
A=matrix(c(-2,11,
-10,5), byrow = TRUE, ncol = 2)
t(A)%*%A
eigen(t(A)%*%A)
setwd("~/Desktop/PSM/Fall 2019/Capstone/Mayo/Distributions")
#setwd("~/Desktop/PSM/Fall 2019/Capstone/Mayo/Distributions")
### Read Me in
X <- read.csv("Mayo_order_processing_data.csv",header = TRUE)
X
X <- X[!is.na(X)]
X
#setwd("~/Desktop/PSM/Fall 2019/Capstone/Mayo/Distributions")
### Read Me in
X <- read.csv("Mayo_order_processing_data.csv",header = TRUE)
discard(X, is.na())
discard(X, is.na
)
orderEntry <- X$Order.Entry[!is.na]
orderEntry <- X$Order.Entry[!is.na(X$Order.Entry)]
orderEntryVerification <- X$Order.Entry.Verification[!is.na(X$Order.Entry.Verification)]
oralDrugPrep <- X$Oral.drug.prep[!is,na(X$Oral.drug.prep)]
oralDrugPrep <- X$Oral.drug.prep[!is.na(X$Oral.drug.prep)]
ivDrugPrep <- X$IV.drugprep[is.na(X$IV.drugprep)]
ivDrugPrep <- X$IV.drugprep[!is.na(X$IV.drugprep)]
orderPrepVerification <- X$Order.prep.verification[!is.na(X$Order.prep.verification)]
dispensing <- X$Dispensing[!is.na(X$Dispensing)]
oralIncoming <- X$Oral.Incoming[!is.na(X$Oral.Incoming)]
ivIncoming <- X$IV.Incoming[!is.na(X$IV.Incoming)]
hist(ivIncoming)
hist(orderEntry)
fits <- fitdistr(orderEntry)
library(MASS)
orderEntryFits <- fitdistr(orderEntry)
orderEntry.norm <- fitdistr(orderEntry, "norm")
orderEntry.norm <- fitdistr(orderEntry, "normal")
plot(orderEntry.norm)
install.packages("fitdistrplus")
#setwd("~/Desktop/PSM/Fall 2019/Capstone/Mayo/Distributions")
library(fitdistrplus)
orderEntry.norm <- fitdistr(orderEntry, "norm")
#setwd("~/Desktop/PSM/Fall 2019/Capstone/Mayo/Distributions")
rm(list = ls())
library(fitdistrplus)
### Read Me in
X <- read.csv("Mayo_order_processing_data.csv",header = TRUE)
### Order Entry
orderEntry <- X$Order.Entry[!is.na(X$Order.Entry)]
hist(orderEntry) ## Looks Normal?
orderEntry.norm <- fitdistr(orderEntry, "norm")
#setwd("~/Desktop/PSM/Fall 2019/Capstone/Mayo/Distributions")
rm(list = ls())
library(fitdistrplus)
setwd("~/Desktop/PSM/Fall 2019/Capstone/Mayo/Distributions")
### Read Me in
X <- read.csv("Mayo_order_processing_data.csv",header = TRUE)
### Order Entry
orderEntry <- X$Order.Entry[!is.na(X$Order.Entry)]
hist(orderEntry) ## Looks Normal?
orderEntry.norm <- fitdistr(orderEntry, "norm")
orderEntry.norm <- fitdistr(orderEntry, "normal")
plot(orderEntry.norm)
library(logspline)
install.packages("logspline")
library(logspline)
### Read Me in
X <- read.csv("Mayo_order_processing_data.csv",header = TRUE)
### Order Entry
orderEntry <- X$Order.Entry[!is.na(X$Order.Entry)]
hist(orderEntry) ## Looks Normal?
orderEntry.norm <- fitdistr(orderEntry, "normal")
plot(orderEntry.norm)
summary(orderEntry.norm)
orderEntry.norm
plot(orderEntry.norm)
hist(orderEntry) ## Looks Normal?
orderEntry.norm <- fitdistr(orderEntry, "normal")
plot(dnorm(orderEntry,orderEntry.norm$estimate,orderEntry.norm$sd))
orderEntry.norm$estimate
orderEntry.norm$estimate[1]
orderEntry.norm$estimate[1][1]
orderEntry.norm$sd
orderEntry.norm$sd[1]
plot(orderEntry, dnorm(orderEntry, orderEntry.norm$estimate[1],orderEntry.norm$estimate[2]))
hist(orderEntry) ## Looks Normal?
orderEntry.norm <- fitdistr(orderEntry, "normal")
plot(orderEntry, dnorm(orderEntry, orderEntry.norm$estimate[1],orderEntry.norm$estimate[2]))
lines(orderEntry, dnorm(orderEntry, orderEntry.norm$estimate[1],orderEntry.norm$estimate[2]))
hist(orderEntry) ## Looks Normal?
orderEntry.norm <- fitdistr(orderEntry, "normal")
lines(orderEntry, dnorm(orderEntry, orderEntry.norm$estimate[1],orderEntry.norm$estimate[2]))
lines(orderEntry, 12*dnorm(orderEntry, orderEntry.norm$estimate[1],orderEntry.norm$estimate[2]))
orderEntry.norm <- fitdist(orderEntry, "normal")
orderEntry.norm <- fitdist(orderEntry, "norm")
plot(orderEntry.norm)
orderEntry.weib <- fitdist(orderEntry, "weibull")
plot(orderEntry.weib)
plot(orderEntry.norm)
summary(orderEntry.norm)
orderEntry.exp <- fitdist(orderEntry, "exp")
plot(orderEntry.exp)
summary(orderEntry.weib)
orderEntry.norm$aic
orderEntry.weib$aic
orderEntry.exp$aic
n.sims <- 5e4
stats <- replicate(n.sims, {
r <- rweibull(n = length(x)
, shape= orderEntry.weib$estimate["shape"]
, scale = orderEntry.weib$estimate["scale"]
)
estfit.weibull <- fitdist(r, "weibull") # added to account for the estimated parameters
as.numeric(ks.test(r
, "pweibull"
, shape= estfit.weibull$estimate["shape"]
, scale = estfit.weibull$estimate["scale"])$statistic
)
})
r <- rweibull(n = length(orderEntry)
, shape= orderEntry.weib$estimate["shape"]
, scale = orderEntry.weib$estimate["scale"]
)
estfit.weibull <- fitdist(r, "weibull") # added to account for the estimated parameters
as.numeric(ks.test(r
, "pweibull"
, shape= estfit.weibull$estimate["shape"]
, scale = estfit.weibull$estimate["scale"])$statistic
)
stats <- replicate(n.sims, {
r <- rweibull(n = length(orderEntry)
, shape= orderEntry.weib$estimate["shape"]
, scale = orderEntry.weib$estimate["scale"]
)
estfit.weibull <- fitdist(r, "weibull") # added to account for the estimated parameters
as.numeric(ks.test(r
, "pweibull"
, shape= estfit.weibull$estimate["shape"]
, scale = estfit.weibull$estimate["scale"])$statistic
)
})
n.sims <- 5e4
stats <- replicate(n.sims, {
r <- rweibull(n = length(orderEntry)
, shape= orderEntry.weib$estimate["shape"]
, scale = orderEntry.weib$estimate["scale"]
)
estfit.weibull <- fitdist(r, "weibull") # added to account for the estimated parameters
as.numeric(ks.test(r
, "pweibull"
, shape= estfit.weibull$estimate["shape"]
, scale = estfit.weibull$estimate["scale"])$statistic
)
})
as.numeric(ks.test(r
, "pweibull"
, shape= estfit.weibull$estimate["shape"]
, scale = estfit.weibull$estimate["scale"])$statistic
)
fit <- logspline(stats)
1 - plogspline(ks.test(x
, "pweibull"
, shape= fit.weibull$estimate["shape"]
, scale = fit.weibull$estimate["scale"])$statistic
, fit
)
stats <- replicate(n.sims, {
r <- rweibull(n = length(orderEntry)
, shape= orderEntry.weib$estimate["shape"]
, scale = orderEntry.weib$estimate["scale"]
)
estfit.weibull <- fitdist(r, "weibull") # added to account for the estimated parameters
as.numeric(ks.test(r
, "pweibull"
, shape= estfit.weibull$estimate["shape"]
, scale = estfit.weibull$estimate["scale"])$statistic
)
})
orderEntry.norm$aic
setwd("~/Desktop/PSM/Fall 2019/Capstone/Mayo/Distributions")
rm(list = ls())
library(fitdistrplus)
library(logspline)
### Read Me in
X <- read.csv("Mayo_order_processing_data.csv",header = TRUE)
### Order Entry
orderEntry <- X$Order.Entry[!is.na(X$Order.Entry)]
hist(orderEntry) ## Looks Normal?
orderEntry.norm <- fitdist(orderEntry, "norm")
plot(orderEntry.norm)
orderEntry.norm$aic
orderEntry.weib <- fitdist(orderEntry, "weibull")
plot(orderEntry.weib)
orderEntry.weib$aic
orderEntry.exp <- fitdist(orderEntry, "exp")
plot(orderEntry.exp)
orderEntry.exp$aic
#setwd("~/Desktop/PSM/Fall 2019/Capstone/Mayo/Distributions")
rm(list = ls())
library(fitdistrplus)
library(logspline)
### Read Me in
X <- read.csv("Mayo_order_processing_data.csv",header = TRUE)
### Order Entry
orderEntry <- X$Order.Entry[!is.na(X$Order.Entry)]
hist(orderEntry) ## Looks Normal?
orderEntry.norm <- fitdist(orderEntry, "norm")
plot(orderEntry.norm)
orderEntry.norm$aic
orderEntry.weib <- fitdist(orderEntry, "weibull")
plot(orderEntry.weib)
orderEntry.weib$aic
orderEntry.exp <- fitdist(orderEntry, "exp")
plot(orderEntry.exp)
orderEntry.exp$aic
orderEntry.gam <- fitdist(orderEntry, "gamma")
plot(orderEntry.gam)
orderEntry.gam$aic
orderEntryVerification <- X$Order.Entry.Verification[!is.na(X$Order.Entry.Verification)]
oralDrugPrep <- X$Oral.drug.prep[!is.na(X$Oral.drug.prep)]
ivDrugPrep <- X$IV.drugprep[!is.na(X$IV.drugprep)]
hist(orderEntryVerification) ## Looks Normal?
orderEntryVerification.norm <- fitdist(orderEntryVerification, "norm")
plot(orderEntryVerification.norm)
orderEntryVerification.norm$aic
orderEntryVerification.weib <- fitdist(orderEntryVerification, "weibull")
plot(orderEntryVerification.weib)
orderEntryVerification.weib$aic
orderEntryVerification.exp <- fitdist(orderEntryVerification, "exp")
plot(orderEntryVerification.exp)
orderEntryVerification.exp$aic
orderEntryVerification.gam <- fitdist(orderEntryVerification, "gamma")
plot(orderEntryVerification.gam)
orderEntryVerification.gam$aic
orderEntryVerification.exp <- fitdist(orderEntryVerification, "gibbs")
orderEntryVerification.exp <- fitdist(orderEntryVerification, "Boltzmann")
hist(orderEntryVerification) ## Looks Normal?
help(hist)
orderEntryVerification.exp <- fitdist(orderEntryVerification, "poisson")
hist(orderEntryVerification,10) ## Looks Normal?
hist(orderEntryVerification,8) ## Looks Normal?
hist(orderEntryVerification) ## Looks Normal?
orderEntryVerification.exp <- fitdist(orderEntryVerification, "pois")
orderEntryVerification.exp <- fitdist(orderEntryVerification, "poiss")
orderEntryVerification.exp <- fitdist(orderEntryVerification, "poisson")
orderEntryVerification.exp <- fitdist(orderEntryVerification, "pois")
orderEntryVerification.exp <- fitdist(orderEntryVerification, "geom")
orderEntryVerification.exp <- fitdist(orderEntryVerification, "dpois")
